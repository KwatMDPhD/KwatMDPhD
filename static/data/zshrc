# =============================================================================================== #
# Alias
# ----------------------------------------------------------------------------------------------- #

alias ls="ls -hG"

alias ll="ls -l"

alias la="ls -lA"

alias lt="ls -ltr"

alias tree="tree -h"

alias du="du -h"

alias df="df -h"

alias grep="grep --color"

alias mkdir="mkdir -pv"

alias rm="rm -i"

alias mv="mv -i"

alias cp="cp -i"

alias rsync="rsync --archive --verbose --itemize-changes --human-readable --progress --stats"

alias find="find -E"

alias ju="julia --project"

alias ..="cd .."

alias ...="cd ../.."

# =============================================================================================== #
# Function
# ----------------------------------------------------------------------------------------------- #

function extract() {

	if [ -f $1 ]; then

		case $1 in

		*.tar.bz2) tar xvjf $1 ;;

		*.tar.gz) tar xvzf $1 ;;

		*.bz2) bzip2 -dk $1 ;;

		*.rar) unrar x $1 ;;

		*.gz) gunzip $1 ;;

		*.bgz) bgzip $1 ;;

		*.tar) tar xvf $1 ;;

		*.tbz2) tar xvjf $1 ;;

		*.tgz) tar xvzf $1 ;;

		*.zip) unzip $1 ;;

		*.Z) uncompress $1 ;;

		*.7z) 7z x $1 ;;

		*) printf "Failed to extract $1\n" ;;

		esac

	fi

}

function recursively-clean-web() {

	find . -type f -size -1M -regex ".*\.(json|yaml|md|html|css|scss|js|jsx|ts|tsx)" -print0 | xargs -0 prettier --write

}

function recursively-clean-jl() {

	julia --eval "using JuliaFormatter; format(\".\")"

}

FONT_DEFAULT="$(tput sgr0)"

FONT_BOLD="$(tput bold)"

FONT_EMERALD="\033[38;5;43m"

FONT_PURPLE="\033[38;5;93m"

function recursively-kata() {

	for pa in $(find . -type d -regex ".*\.jl")

	do

		pushd $pa &&

		printf "$FONT_BOLD$FONT_PURPLE$(pwd)$FONT_DEFAULT\n" &&

		kata format &&

		popd

	done

}

function recursively-git-fetch-status-diff() {

	for pa in $(find . -type d -regex ".*\.git")

	do

		pushd $pa/../ &&

		printf "$FONT_BOLD$FONT_EMERALD$(pwd)$FONT_DEFAULT\n" &&

		git fetch &&

		git status &&

		git diff &&

		popd

	done

}

function recursively-git-add-commit-push() {

	for pa in $(find . -type d -regex ".*\.git")

	do

		pushd $pa/../ &&

		printf "$FONT_BOLD$FONT_EMERALD$(pwd)$FONT_DEFAULT\n" &&

		git add -A &&

		git commit -m "$1" &&

        git pull &&

		git push &&

		popd

	done

}

function recursively-housekeep() {

	recursively-clean-web &&

	recursively-clean-jl &&

	recursively-kata &&

	recursively-git-add-commit-push "$1"

}

# =============================================================================================== #
# Style
# ----------------------------------------------------------------------------------------------- #

PROMPT="%B%~%b "

RPROMPT=" %B%*%b"

# =============================================================================================== #
# Environment
# ----------------------------------------------------------------------------------------------- #

eval "$(/opt/homebrew/bin/brew shellenv)"

PATH=~/.julia/bin:$PATH

# >>> juliaup initialize >>>

# !! Contents within this block are managed by juliaup !!

path=('/Users/kwat/.juliaup/bin' $path)
export PATH

# <<< juliaup initialize <<<
